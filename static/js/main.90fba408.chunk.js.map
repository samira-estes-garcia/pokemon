{"version":3,"sources":["graphql/get-pokemons.js","components/Pokemon.js","containers/PokemonsContainer.js","App.js","index.js"],"names":["GET_POKEMONS","gql","Pokemon","pokemon","className","name","maxHP","maxCP","src","image","alt","attacks","special","slice","map","attack","damage","PokemonsContainer","useQuery","variables","first","data","pokemons","id","App","client","ApolloClient","uri","ReactDOM","render","document","getElementById"],"mappings":"2LAEaA,E,MAAeC,GAAH,8R,OCAZC,EAAU,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,eAAf,SACI,4BAAID,EAAQE,SAGhB,sBAAKD,UAAU,eAAf,UACA,+BAAOD,EAAQG,QACf,+BAAOH,EAAQI,WAGf,qBAAKH,UAAU,gBAAf,SACI,qBAAKI,IAAKL,EAAQM,MAAOC,IAAKP,EAAQE,SAG1C,qBAAKD,UAAU,kBAAf,SACKD,GACDA,EAAQQ,SACRR,EAAQQ,QAAQC,QACfC,MAAM,EAAE,GACRC,KAAI,SAAAC,GAAM,OACX,+BACKA,EAAOV,MADZ,UAAcU,EAAOV,KAArB,YAA6BU,EAAOC,kBCnBvCC,EAAoB,WAAO,IAAD,EACMC,mBAASlB,EAAc,CAC5DmB,UAAW,CAAEC,MAAO,KADhBC,KAD2B,gBACD,GADC,GACnBC,gBADmB,MACR,GADQ,EAKnC,OACI,qBAAKlB,UAAU,qBAAf,SACKkB,GAAYA,EAASR,KAAI,SAAAX,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQoB,U,MCQxDC,MAdf,WACE,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,yCAGP,OACC,cAAC,iBAAD,CAAgBF,OAAQA,EAAxB,SACE,+BACE,cAAC,EAAD,SCVPG,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.90fba408.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_POKEMONS = gql`\nquery pokemons($first: Int!) {\n    pokemons(first: $first) {\n        id\n        name\n        image\n        maxHP\n        maxCP\n        attacks {\n            special {\n                name\n                damage\n            }\n        }\n    }\n}\n`","import React from 'react';\n\nexport const Pokemon = ({pokemon}) => {\n    return (\n        <div className=\"pokemon\">\n            <div className=\"pokemon_name\">\n                <p>{pokemon.name}</p>\n            </div>\n\n            <div className=\"pokemon_meta\">\n            <span>{pokemon.maxHP}</span>\n            <span>{pokemon.maxCP}</span>\n            </div>\n\n            <div className=\"pokemon_image\">\n                <img src={pokemon.image} alt={pokemon.name} />\n            </div>\n\n            <div className=\"pokemon_attacks\">\n                {pokemon && \n                pokemon.attacks &&\n                pokemon.attacks.special\n                .slice(0,3)\n                .map(attack => (\n                <span key={`${attack.name}-${attack.damage}`}>\n                    {attack.name}\n                </span>\n                ))}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POKEMONS } from '../graphql/get-pokemons'\nimport { Pokemon } from '../components/Pokemon';\n\nexport const PokemonsContainer = () => {\n    const { data: { pokemons = [] } = {} } = useQuery(GET_POKEMONS, {\n        variables: { first: 9 },\n    });\n\n    return (\n        <div className=\"pokemons_container\">\n            {pokemons && pokemons.map(pokemon => <Pokemon key={pokemon.id} pokemon={pokemon} />)}\n        </div>\n    )\n}\n","import React from 'react'\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/client'\nimport { PokemonsContainer } from './containers/PokemonsContainer';\nimport './App.css';\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: 'https://graphql-pokemon2.vercel.app/'\n  });\n\n  return (\n   <ApolloProvider client={client}>\n     <main>\n       <PokemonsContainer />\n     </main>\n   </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}